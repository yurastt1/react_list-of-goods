{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","showButton","preparedGoods","showGoodsList","setState","prevState","reverse","sortByAlphabet","sort","reset","sortByLength","a","b","length","this","className","type","onClick","map","good","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAsGaC,E,4MAlGbC,MAAQ,CACNC,YAAY,EACZC,cAAc,GAAD,OAAMJ,I,EAGrBK,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,YAAaI,EAAUJ,gB,EAI3BK,QAAU,WACR,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BH,cAAe,YAAIG,EAAUH,eAAeI,e,EAIhDC,eAAiB,WACf,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BH,cAAe,YAAIG,EAAUH,eAAeM,Y,EAIhDC,MAAQ,WACN,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BH,cAAc,GAAD,OAAMJ,Q,EAIvBY,aAAe,WACb,EAAKN,UAAS,SAAAC,GAAS,MAAK,CAC1BH,cAAe,YAAIG,EAAUH,eAC1BM,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,e,uDAIzB,IAAD,EAC+BC,KAAKd,MAAnCC,EADD,EACCA,WAAYC,EADb,EACaA,cAEpB,OACE,yBAAKa,UAAU,OACZd,EAEG,4BACEe,KAAK,SACLC,QAASH,KAAKX,eAFhB,SAQA,oCACE,yBAAKY,UAAU,WACb,4BACEC,KAAK,SACLC,QAASH,KAAKR,SAFhB,WAOA,4BACEU,KAAK,SACLC,QAASH,KAAKP,gBAFhB,oBAOA,4BACES,KAAK,SACLC,QAASH,KAAKL,OAFhB,SAOA,4BACEO,KAAK,SACLC,QAASH,KAAKJ,cAFhB,mBAOF,4BACGR,EAAcgB,KAAI,SAAAC,GAAI,OACrB,wBAAIC,IAAKD,GACNA,a,GArFHE,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.505f95e8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    showButton: true,\n    preparedGoods: [...goodsFromServer],\n  }\n\n  showGoodsList = () => {\n    this.setState(prevState => ({\n      showButton: !prevState.showButton,\n    }));\n  }\n\n  reverse = () => {\n    this.setState(prevState => ({\n      preparedGoods: [...prevState.preparedGoods].reverse(),\n    }));\n  }\n\n  sortByAlphabet = () => {\n    this.setState(prevState => ({\n      preparedGoods: [...prevState.preparedGoods].sort(),\n    }));\n  }\n\n  reset = () => {\n    this.setState(prevState => ({\n      preparedGoods: [...goodsFromServer],\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      preparedGoods: [...prevState.preparedGoods]\n        .sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  render() {\n    const { showButton, preparedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        {showButton\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.showGoodsList}\n            >\n              Start\n            </button>\n          )\n          : (\n            <>\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  onClick={this.reverse}\n                >\n                  reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.sortByAlphabet}\n                >\n                  sort by alphabet\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.reset}\n                >\n                  reset\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.sortByLength}\n                >\n                  sort by length\n                </button>\n              </div>\n              <ul>\n                {preparedGoods.map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n\n          )\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}